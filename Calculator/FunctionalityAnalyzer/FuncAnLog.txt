Parser
  Methods:
	Int32 CharToDigit(Char)
	System.String DoubleToString(Double)
	Char ToLowerCase(Char)
	System.String ToLowerCase(System.String)
	Double StringToDouble(System.String, Int32 ByRef)
	Double StringToDouble(System.String)
	System.String SkipSpaces(System.String)
	Boolean IsLetter(Char)
	Boolean IsIdentifierChar(Char, Boolean)
	Int32 FindNumber(System.String, Int32, Double ByRef)
	System.String FindName(System.String, Int32)
	Int32 FindName(System.String, Int32, System.String ByRef)
	Int32 FindClosing(System.String, Int32)
	Int32 FindClosing(System.String, Int32, Char)
	Int32 FindClosing(System.String, Int32, System.String ByRef)
	Int32 FindClosing(System.String, Int32, System.String ByRef, Char)
	Int32[] TextPlateSize(System.String)
	System.String AdjustPlate(System.String, Int32, Int32)
	System.String AdjustPlate(System.String)
	System.String CenterString(System.String, Int32)
	System.String ConcatPlates(System.String, System.String)
	Boolean CheckVariableName(System.String)
  Test Coverage: 0%
ParsedStream
  Methods:
	Boolean get_IsEnd()
	Calculator.Logic.Token ReadOperand()
	Void ReadOperator(Calculator.Logic.Operator ByRef)
	Calculator.Logic.Operator ReadOperator()
	System.String GetRest()
	System.String Get(Int32)
	System.String Get()
	System.String GetEntity()
	System.String GetStatement()
	System.String GetStatement(Boolean ByRef)
  Test Coverage: 0%
Interpreter
  Fields:
	Calculator.Logic.Scope Globals
  Methods:
	Void Run(System.Func`1[System.String], System.Func`2[System.String,System.Boolean])
	Void Run(System.Func`1[System.String], System.Func`2[System.String,System.Boolean], Boolean)
  Test Coverage: 50%
Prerequisites
  Methods:
	Void RegisterOperators()
	Void RegisterBIFs()
	Void RegisterStatements()
  Test Coverage: 0%
Number
Operand
  Methods:
	Double get_Value()
	Void set_Value(Double)
	Calculator.Logic.Token Clone()
	System.String Draw()
  Test Coverage: 0%
OperandSearch
  Methods:
	Int32 Run(System.String, Int32, Calculator.Logic.Token ByRef)
  Test Coverage: 0%
Variable
  Fields:
	System.String Name
Plus
  Methods:
	Int32 get_OperandCount()
  Test Coverage: 0%
Minus
  Methods:
	Int32 get_OperandCount()
  Test Coverage: 0%
Multiply
  Methods:
	Int32 get_OperandCount()
  Test Coverage: 0%
Divide
  Methods:
	Int32 get_OperandCount()
  Test Coverage: 0%
UnaryOp
  Methods:
	Int32 get_OperandCount()
	Int32 Search(System.String, Int32)
	Calculator.Logic.Token Clone()
	System.String Draw()
  Test Coverage: 0%
BinaryOp
  Methods:
	Int32 get_OperandCount()
	Int32 Search(System.String, Int32)
	Calculator.Logic.Token Clone()
	System.String Draw()
  Test Coverage: 0%
Factorial
  Methods:
	Int32 get_OperandCount()
  Test Coverage: 0%
Operator
  Methods:
	Int32 get_OperandCount()
	Void PushOperands(MyLibrary.MyStack`1[Calculator.Logic.Operand], MyLibrary.Node`1[Calculator.Logic.Operand] ByRef)
	Void Perform(MyLibrary.MyStack`1[Calculator.Logic.Operand])
	Int32 Search(System.String, Int32)
	Calculator.Logic.Token Clone()
	System.String Draw()
  Test Coverage: 0%
OperatorSearch
  Methods:
	Void RegisterOperator(Calculator.Logic.Operator)
	Int32 Run(System.String, Int32, Calculator.Logic.Operator ByRef)
  Test Coverage: 0%
Subtree
  Fields:
	Calculator.Logic.Expression tree
BuiltInFunc
  Fields:
	System.String name
  Methods:
	Void SetArguments(System.String)
	Calculator.Logic.Token Clone()
	Double Evaluate()
	System.String Draw()
  Test Coverage: 0%
BIFSearch
  Methods:
	Void RegisterBIF(Calculator.Logic.BuiltInFunc)
	Int32 Run(System.String, Int32, Calculator.Logic.Token ByRef)
  Test Coverage: 0%
MinBIF
  Methods:
	Void SetArguments(System.String)
  Test Coverage: 0%
SqrtBIF
  Methods:
	Void SetArguments(System.String)
  Test Coverage: 0%
MaxBIF
  Methods:
	Void SetArguments(System.String)
  Test Coverage: 0%
Statement
  Methods:
	System.String Process()
  Test Coverage: 100%
ParsingResult
  Fields:
	Calculator.Logic.Statement result
	System.Boolean isMatch
	System.Boolean isComplete
StatementParser
  Methods:
	Calculator.Logic.ParsingResult Run(System.String)
  Test Coverage: 0%
StatementSearcher
  Methods:
	Void Register(Calculator.Logic.StatementParser)
	Calculator.Logic.Statement Run(System.String)
  Test Coverage: 50%
VarSearch
  Methods:
	Int32 Run(System.String, Int32, Calculator.Logic.Token ByRef)
  Test Coverage: 0%
Variables
  Methods:
	Void CreateLocals()
	Void MergeLocals()
	Void ClearLocals()
	Void ClearDictionaries()
	Void AssignLocal(System.String, Double)
	Void AssignLocal(Calculator.Logic.Variable, Double)
	Void CreateUnassigned(System.String)
	Double GetLocal(System.String)
	Boolean IsLocal(System.String)
	Boolean IsVar(System.String)
  Test Coverage: 0%
Assignment
  Methods:
	System.String Process()
  Test Coverage: 0%
AssignmentParser
Block
  Methods:
	Int32 get_Count()
	System.String Process()
  Test Coverage: 0%
BlockParser
Lambda
  Fields:
	System.String Name
  Methods:
	System.String Process()
  Test Coverage: 0%
LambdaParser
Scope
  Methods:
	Double get_Item(System.String)
	Void set_Item(System.String, Double)
	Void Merge(Calculator.Logic.Scope)
	Void Assign(System.String, Double)
	Boolean IsVar(System.String)
	Void Reserve(System.String, Boolean)
	Void Reserve(System.String)
  Test Coverage: 0%
Declaration
  Fields:
	System.String alias
	System.String Keyword
  Methods:
	System.String Process()
  Test Coverage: 0%
DeclarationParser
  Methods:
	Int32 FindDeclaration(System.String, Int32)
	Int32 FindDeclaration(System.String, Calculator.Logic.ParsingResult ByRef)
  Test Coverage: 0%
Expression
  Fields:
	Calculator.Logic.Token Root
  Methods:
	System.String Draw()
	Calculator.Logic.Expression Clone()
	Double Calculate()
	System.String Process()
  Test Coverage: 25%
ExpressionBuilder
  Methods:
	Void InsertBefore(Calculator.Logic.Token, Int32)
	Void InsertAfter(Calculator.Logic.Token, Int32, Int32)
	Void AddNext(Calculator.Logic.Token, Int32)
	Void AddNext(Calculator.Logic.Expression, Int32)
	Calculator.Logic.Expression ToExpression()
  Test Coverage: 0%
ExpressionParser
MultiNode`1
  Fields:
	Calculator.Logic.MultiNode`1[T] Ancestor
	Calculator.Logic.MultiNode`1[T][] Descendants
	System.Int32 DescendantCount
	T Element
	System.Int32 Index
Priorities
  Fields:
	System.Int32 value__
	Calculator.Logic.Priorities assign
	Calculator.Logic.Priorities plus
	Calculator.Logic.Priorities mult
	Calculator.Logic.Priorities degree
	Calculator.Logic.Priorities factorial
	Calculator.Logic.Priorities operand
  Methods:
	System.String ToString(System.String, System.IFormatProvider)
	Int32 CompareTo(System.Object)
	System.String ToString(System.String)
	System.String ToString(System.IFormatProvider)
	Boolean HasFlag(System.Enum)
	System.TypeCode GetTypeCode()
  Test Coverage: 0%
Token
  Fields:
	System.Int32 Priority
	System.Int32 branchCount
	Calculator.Logic.Token Ancestor
	Calculator.Logic.Token[] Arguments
	System.Int32 Index
  Methods:
	Calculator.Logic.Token Clone()
	Double Evaluate()
	System.String Draw()
  Test Coverage: 0%
UserFunc
  Fields:
	System.String Name
	System.String Content
UFSearcher
  Methods:
	Void RegisterUF(Calculator.Logic.UserFunc)
	Int32 Run(System.String, Int32, Calculator.Logic.Token ByRef)
  Test Coverage: 0%
Value
  Fields:
	System.Double RawValue
	System.Type Type

